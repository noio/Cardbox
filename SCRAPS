<ul>
    {% for factsheet in factsheets %}
    <li>{{factsheet.name}} 
        <a href='' onClick='$("id_factsheet").set("value","{{factsheet.key.name}}"); return false;'>select</a>
        <a href='{%url cardbox.views.page_view factsheet.key.name %}' target='_blank'>view</a>
    </li>
    {%endfor%}
</ul>

<ul>
    {%for template in templates%}
    <li>{{template.name}} 
        <a href='' onClick='$("id_template").set("value","{{template.key.name}}"); return false;'>select</a>
        <a href='{%url cardbox.views.page_view template.key.name %}' target='_blank'>view</a>
    </li>
    {%endfor%}
</ul>
          
          
<div class='span-24 cardsets all'>
    <h5>available sets:</h5>
    <ul class='clearfix'>
        {% for cardset in cardsets %}
        <li id='cardset_{{cardset.key.id}}'> 
            <span>
                <h6>{{cardset.title}}
                    {% ifequal cardset.owner request.user.google_user %}
                    <a href='{% url cardbox.views.cardset_edit cardset.key.id %}'>edit</a>{%endifequal%}
                </h6>{{cardset.factsheet.name|cut:"Factsheet: "}}</span>
            {% with cardset.random_card as card %}{% include 'card_preview.html' %}{% endwith%}
        </li>
        {% endfor %}
    </ul>
</div>
          
<script type="text/javascript" charset="utf-8">
    selected_sets = $('id_cardsets').get('value').split(',');
    selected_sets.each(function(elem, index){
        s = $('cardset_'+elem);
        $$('.cardsets.selected ul').adopt(s);
    });
    var cardset_sortable = new Sortables('.cardsets ul',{'clone':true,
                                                         'opacity':0.2,
                                                         'snap':20});
    cardset_sortable.addEvent('start',function(e,c){
        c.set('style', c.get('style') + 'z-index:5;');
    });
    cardset_sortable.addEvent('sort',function(e,c){
        var ids = cardset_sortable.serialize(0,function(e, i){
            if(e.get('tag')=='li' && e.get('id') && e.get('id').match('^cardset_')){
                return e.get('id').replace('cardset_','');
            }
        }).join(',');
        $('id_cardsets').set('value',ids);

    });

</script>


 
 class CardHistoryRefactor(Mapper):

     KIND = models.Card

     def map(self, card):
         h = card.history
         new_h = ''
         logging.info('original:\n%s'%h)
         for line in h.split('\n'):
             obj = yaml.load(line)
             if obj:
                 if isinstance(obj, dict):
                     ts = obj.keys()[0].replace(microsecond=0)
                     obj = [ts] + list(obj.values()[0][:3])
                 if len(obj) < 5:
                     obj.append(obj[0] + datetime.timedelta(minutes=1))
                 new_h += yaml.dump([obj])
         logging.info('refactored:\n%s'%new_h)
         card.history = new_h
         return ([card],[])